(import
  (chicken flonum)
  (chicken format))

(define (rolls! r nbd nbf)
  (let loop ((nbd nbd) (i 0))
    (if (= nbd 0)
      (vector-set! r i (+ (vector-ref r i) 1))
      (do ((nbf nbf (- nbf 1))) ((= nbf 0))
        (loop (- nbd 1) (+ i nbf))))))

(define (solve nbdp nbfp nbdc nbfc)
  (let* ((m (max (* nbdp nbfp)
                 (* nbdc nbfc)))
         (rp (make-vector (+ m 1) 0))
         (rc (make-vector (+ m 1) 0)))
    (rolls! rp nbdp nbfp)
    (rolls! rc nbdc nbfc)
    (do ((i 1 (+ i 1))
         (p 0 (do ((t 1 (+ t 1))
                   (p p (+ p (* (vector-ref rp i)
                                (vector-ref rc t)))))
                ((= t i) p)))
         (c 0 (do ((t 1 (+ t 1))
                   (c c (+ c (* (vector-ref rp i)
                                (vector-ref rc t)))))
                ((> t m) c))))
      ((> i m) (exact->inexact (/ p c))))))

(define (output n)
  (flonum-print-precision 7) (format "~a" n))

(let ((_ (output (solve 9 4 6 6))))
  (print _) (assert (string=? _ "0.5731441")))
