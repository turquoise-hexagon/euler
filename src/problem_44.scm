(define (pentagonal n)
  (/ (* n (sub1 (* 3 n))) 2))

(define (pentagonal? n)
  (integer? (/ (+ (sqrt (+ (* 24 n) 1)) 1) 6)))

(define (main)
  (let helper-1 ((x 1))
    (let ((a (pentagonal x)))
      (let helper-2 ((y 1))
        (if (= y x)
            (helper-1 (add1 x))
            (let ((b (pentagonal y)))
              (if (and (pentagonal? (+ a b))
                       (pentagonal? (- a b)))
                  (abs (- a b))
                  (helper-2 (add1 y)))))))))

(display (main))
(newline)
