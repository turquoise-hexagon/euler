(define (divisors n)
  (let ((array (make-vector (add1 n) 0)))
    (do ((x 1 (add1 x))) ((> x n) array)
      (do ((y (+ x x) (+ y x))) ((> y n))
        (vector-set! array y (+ x (vector-ref array y)))))))

(define (main n)
  (let ((array (divisors n)))
    (do ((x 1 (add1 x))
         (acc 0 (let ((y (vector-ref array x)))
                  (if (and (> n y) (not (= x y))
                           (= (vector-ref array y) x))
                      (+ acc y)
                      acc))))
      ((> x n) acc))))

(display (main 10000))
(newline)
